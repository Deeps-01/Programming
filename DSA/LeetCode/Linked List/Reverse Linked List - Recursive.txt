/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if (!head)
            return nullptr;
        if (!head->next)
            return head;
        
        ListNode* revNode = reverseList(head->next);
        ListNode* newNode = new ListNode(head->val);
        
        ListNode *currNode = revNode;
        while (currNode->next)
            currNode = currNode->next;
        currNode->next = newNode;
        
        return revNode;
    }
};